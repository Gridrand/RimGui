"use strict";(self.webpackChunkwebsite_3=self.webpackChunkwebsite_3||[]).push([[6449],{5923:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"widgets/list-view","title":"ListView","description":"See the ListViewDemo class.","source":"@site/docs/widgets/list-view.md","sourceDirName":"widgets","slug":"/widgets/list-view","permalink":"/rimgui/docs/widgets/list-view","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Label","permalink":"/rimgui/docs/widgets/label-input"},"next":{"title":"Scroll","permalink":"/rimgui/docs/widgets/scroll"}}');var t=r(4848),s=r(8453);const a={},c="ListView",l={},o=[];function d(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"listview",children:"ListView"})}),"\n",(0,t.jsx)(n.p,{children:"See the ListViewDemo class."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public void Draw()\r\n{\r\n    // Display non-scrolling list view\r\n    Gui.Heading("NonScroll");\r\n    using (Style.Frame.BeginPadding(new(1, 1, 1, 1)))\r\n    using (Gui.BeginFrame())\r\n    {\r\n        // Uses item drawer and selection handler\r\n        Gui.ListView(\r\n            nonScrollItems,\r\n            new(itemDrawer, selectedItems, n => n.GetHashCode()),\r\n            null);\r\n    }\r\n\r\n    // Display scrolling list view\r\n    Gui.Heading("Scroll");\r\n    using (Style.Frame.BeginPadding(new(1, 1, 1, 1)))\r\n    using (Gui.BeginFrame())\r\n        Gui.ScrollingListView(100f, scrollItems, new(itemDrawer, selectedItems, n => n.GetHashCode()));\r\n}\r\n\r\n/// <summary>\r\n/// Represents an item in the list.\r\n/// </summary>\r\nclass Item\r\n{\r\n    public string Name { get; }\r\n    public bool IsChecked { get; set; }\r\n\r\n    public Item(string name)\r\n    {\r\n        Name = name;\r\n    }\r\n}\r\n\r\n/// <summary>\r\n/// Handles rendering of individual list items.\r\n/// </summary>\r\nclass ItemDrawer : IListItemDrawer<Item>\r\n{\r\n    readonly Gui ui;\r\n\r\n    public ItemDrawer(Gui im)\r\n    {\r\n        this.ui = im;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Draws a list item with a checkbox and an index label.\r\n    /// </summary>\r\n    public void Draw(int index, Item item, Rect rect)\r\n    {\r\n        using var rects = ui.RectsBuilder\r\n            .Fixed(rect.height)\r\n            .Fit(1).BuildHorizontal(rect);\r\n\r\n        var isChecked = item.IsChecked;\r\n\r\n        // Draws a checkbox, updating item state if changed\r\n        if (ui.NextRect(rects.R0).CheckBox(ref isChecked))\r\n        {\r\n            item.IsChecked = isChecked;\r\n        }\r\n\r\n        ui.NextRect(rects.R1).Text($"{index}");\r\n    }\r\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>c});var i=r(6540);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);