"use strict";(self.webpackChunkwebsite_3=self.webpackChunkwebsite_3||[]).push([[6723],{7884:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>u,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"widgets/label-input","title":"Label","description":"See the LabelDemo class.","source":"@site/docs/widgets/label-input.md","sourceDirName":"widgets","slug":"/widgets/label-input","permalink":"/rimgui/docs/widgets/label-input","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"InteractiveItem","permalink":"/rimgui/docs/widgets/interactive-item"},"next":{"title":"ListView","permalink":"/rimgui/docs/widgets/list-view"}}');var i=t(4848),l=t(8453);const a={},u="Label",o={},s=[];function p(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"label",children:"Label"})}),"\n",(0,i.jsx)(n.p,{children:"See the LabelDemo class."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'public void Draw()\r\n{\r\n    Gui.Heading("Settings");\r\n\r\n    // Input for adjusting the label-to-input ratio\r\n    Gui.LabelInputFloat("Label Ratio", ref labelRatio, 0.1f, 0.9f);\r\n\r\n    // Apply label size ratio to all labeled inputs\r\n    using var s = Style.LabelSizes.Begin(Size.Ratio(labelRatio));\r\n\r\n    Gui.Separator();\r\n\r\n    // Various labeled UI components\r\n    Gui.LabelDropdown("Dropdown", ref sampleEnum);\r\n    Gui.LabelText("Text", "text");\r\n    Gui.LabelInputColor("InputColor", ref color);\r\n    Gui.LabelSlider("Slider 0-100", ref sliderIntValue, 0, 100);\r\n    Gui.LabelInputBool("InputBool", ref boolValue);\r\n    Gui.LabelInputNumeric("InputNumeric Int", ref numericIntValue);\r\n    Gui.LabelInputNumeric("InputNumeric Float", ref numericFloatValue);\r\n    Gui.LabelInputInt("InputInt 0-1", ref intValue1, 0, 1);\r\n    Gui.LabelInputInt("InputInt 0-100", ref intValue2, 0, 100);\r\n    Gui.LabelInputInt("InputInt 0-10000", ref intValue3, 0, 10000);\r\n    Gui.LabelInputFloat("InputFloat 0-100", ref floatValue, 0f, 100f);\r\n    Gui.LabelInputDouble("InputDouble 0-1000", ref doubleValue, 0d, 1000d);\r\n    Gui.LabelInputString("InputString", ref stringValue);\r\n}\r\n\r\nenum SampleEnum\r\n{\r\n    A,\r\n    B,\r\n    C\r\n}\n'})})]})}function c(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>u});var r=t(6540);const i={},l=r.createContext(i);function a(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);